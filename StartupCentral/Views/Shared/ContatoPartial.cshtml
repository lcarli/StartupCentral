@model List<StartupCentral.Models.Contato>

@for (int i = 0; i < Model.Count; i++)
{
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model[i].Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model[i].Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model[i].Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model[i].Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model[i].Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model[i].Telefone, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<input type="text" class="form-control" data-inputmask="'mask' : '(999) 999-9999'">*@


        <div class="form-group">
            @Html.LabelFor(model => model[i].Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model[i].Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model[i].Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model[i].TipoDoContato,"Tipo do Contato", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model[i].TipoDoContato, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model[i].TipoDoContato, "", new { @class = "text-danger" })
            </div>
        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- jquery.inputmask -->
    <script src="~Content/vendors/jquery.inputmask/dist/min/jquery.inputmask.bundle.min.js"></script>
        <!-- jquery.inputmask -->
    <script>
          $(document).ready(function() {
            $(":input").inputmask();
          });
    </script>
    <!-- /jquery.inputmask -->
}
    

