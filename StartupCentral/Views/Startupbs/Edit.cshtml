@model StartupCentral.Models.Startupbs
@using StartupCentral.Models

@{
    ViewBag.Title = "Editar Startup";
    Layout = "~/Views/Shared/_LayoutGL.cshtml";
}

<h2>Editar Startup</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Startup</h4>
        <hr />
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Startup Wizard <small>Editar Startup</small></h2>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <!-- Smart Wizard -->
                    <p>Editar startup.</p>
                    <div id="wizard" class="form_wizard wizard_horizontal">
                        <ul class="wizard_steps">
                            <li>
                                <a href="#step-1">
                                    <span class="step_no">1</span>
                                    <span class="step_descr">
                                        Passo 1<br />
                                        <small>Dados da Startup</small>
                                    </span>
                                </a>
                            </li>
                            <li>
                                <a href="#step-2">
                                    <span class="step_no">2</span>
                                    <span class="step_descr">
                                        Passo 2<br />
                                        <small>Contatos da Startup</small>
                                    </span>
                                </a>
                            </li>
                            <li>
                                <a href="#step-3">
                                    <span class="step_no">3</span>
                                    <span class="step_descr">
                                        Passo 3<br />
                                        <small>Owner</small>
                                    </span>
                                </a>
                            </li>
                        </ul>
                        <div id="step-1">
                            <form class="form-horizontal form-label-left">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2", required = "required" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.MicrosoftAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.MicrosoftAccount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MicrosoftAccount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BizSparkID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BizSparkID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BizSparkID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Aceleradora, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Aceleradora.ID, (ViewBag.AceleradoraList as IEnumerable<SelectListItem>), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Aceleradora, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Benefício, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Benefício.ID, (ViewBag.BeneficioList as IEnumerable<SelectListItem>), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Benefício, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Status.ID, (ViewBag.StatusList as IEnumerable<SelectListItem>), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConsumoMes, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ConsumoMes, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ConsumoMes, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConsumoAcumulado, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ConsumoAcumulado, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ConsumoAcumulado, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConsumoPago, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ConsumoPago, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ConsumoPago, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </form>
                        </div>

                        <div id="step-2">
                            @Html.Partial("~/Views/Shared/ContatoPartial.cshtml", new List<Contato>() { new Contato() },
                                    new ViewDataDictionary(ViewData)
                                    {
                                        TemplateInfo = new TemplateInfo
                                        {
                                            HtmlFieldPrefix = "Contatos"
                                        }
                                    })
                        </div>
                        <div id="step-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Observações, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Observações, htmlAttributes: new { @class = "resizable_textarea form-control", @placeholder = "Digite aqui observações, principalmente se a Startup está sendo adicionada como exceção" })
                                    @*<textarea name="Observações" class="resizable_textarea form-control" placeholder="Digite aqui observações, principalmente se a Startup está sendo adicionada como exceção"></textarea>*@
                                    @Html.ValidationMessageFor(model => model.Observações, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End SmartWizard Content -->
                </div>
            </div>
            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>*@
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js"></script>
    <script>
      $(document).ready(function() {
        $('#wizard').smartWizard();

        $('.buttonNext').addClass('btn btn-success');
        $('.buttonPrevious').addClass('btn btn-primary');
        $('.buttonFinish').addClass('btn btn-default');
      });
    </script>
    <script src="~/Content/vendors/autosize/dist/autosize.min.js"></script>
    <!-- Autosize -->
    <script>
          $(document).ready(function() {
            autosize($('.resizable_textarea'));
          });
    </script>
    <!-- /Autosize -->
    <!-- /jQuery Smart Wizard -->
}


